# python 元组
# tuple()不可变对象，元素为数字，字符，字符串
# 单个元素
tup = (1,)
# 空元组
tup = ()
tup = (1,2,3,4,5)
# 不带括号的字面量
tup1 = 1，2，3，4，'a' #tup1 =(1,2,3,4,'a')

# 下标访问
tup[1]
# 切片
tup[1:3]
# 删除元组
del tup
# 变量交换值
a,b=b,a 

# 自动解包支持一切可迭代对象
# python3中，支持更高级的解包操作，用星号操作使得等号左边的变量个数可以少于右边迭代对象中元素的个数。
# 函数调用时，可以用 * 或者 ** 解包可迭代对象，作为参数传递
# python3.5，函数调用和表达式中可支持更多的解包操作。

# 序列解包unpacking
a,b,c=1,2,3   #元组解包
a,b,c=(1,2,3)   #元组解包
a,b,c=[1,2,3]   #列表解包
a,b,c={1,2,3}   #集合解包
a,b,c=(+1 for x in range(3)) #生成器解包
a,b,c='123' #字符串
a,b,c=function() #函数返回多个值，返回的对象其实就是元组

#字典在python中比较特殊，这种解包方式只能得到下标！
a,b,c = {"name":"kirin","age":18,"sex":"男"}
print(a,b,c); #输出结果为：name,age,sex; 

#python的解构和ES6的解构在字典这里有很大区别，要特别注意！
a,b,c = {"name":"kirin","age":18,"sex":"男"}.values()
print(a,b,c); #输出结果为：'kirin',18,'男'; 

a,b,c = {"name":"kirin","age":18,"sex":"男"}.items()
print(a,b,c); #输出结果为：('name','kirin'),('age',18),('sex','男')


# 左边个数小于右边个数
a,*b,c=[1,2,3,4,5]  #a=1,b=[2,3,4],c=5
[*range(4),4]  # [0,1,2,3,4]
*range(4),4     # (0,1,2,3,4)

# 一些元素不要
a,_,c=1,2,3
a,*_,c=1,2,3,4,5,6 # a=1,c=6, _=[2,3,4,5]

# 拼接两个序列 
a=[1,2,3]
b=[4,5,6]
c=[*a,*b]           #合并生成一个列表
d=(*a,*b)           #合并生成一个元组
f={*a,*b}           #合并生成一个集合
e={**dict1,**dict2} #合并两个字典

# 函数参数解包
def fun(a,b,c):
    pass

fun(*[1,2,3])
fun(*(1,2,3))

# *定义可变长度参数，**定义关键字参数
def func(*num,**dict1):
    pass

# 打包
(a,b,c)=1,2,3   # 元组打包
[a,b,c]=1,2,3   #列表打包
